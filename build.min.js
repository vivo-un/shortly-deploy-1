var path=require("path"),knex=require("knex")({client:"sqlite3",connection:{filename:path.join(__dirname,"../db/shortly.sqlite")},useNullAsDefault:!0}),db=require("bookshelf")(knex);db.knex.schema.hasTable("urls").then(function(a){a||db.knex.schema.createTable("urls",function(a){a.increments("id").primary(),a.string("url",255),a.string("baseUrl",255),a.string("code",100),a.string("title",255),a.integer("visits"),a.timestamps()}).then(function(a){console.log("Created Table",a)})}),db.knex.schema.hasTable("users").then(function(a){a||db.knex.schema.createTable("users",function(a){a.increments("id").primary(),a.string("username",100).unique(),a.string("password",100),a.timestamps()}).then(function(a){console.log("Created Table",a)})}),module.exports=db;var db=require("../config"),crypto=require("crypto"),Link=db.Model.extend({tableName:"urls",hasTimestamps:!0,defaults:{visits:0},initialize:function(){this.on("creating",function(a,b,c){var d=crypto.createHash("sha1");d.update(a.get("url")),a.set("code",d.digest("hex").slice(0,5))})}});module.exports=Link;var db=require("../config"),bcrypt=require("bcrypt-nodejs"),Promise=require("bluebird"),User=db.Model.extend({tableName:"users",hasTimestamps:!0,initialize:function(){this.on("creating",this.hashPassword)},comparePassword:function(a,b){bcrypt.compare(a,this.get("password"),function(a,c){b(c)})},hashPassword:function(){var a=Promise.promisify(bcrypt.hash);return a(this.get("password"),null,null).bind(this).then(function(a){this.set("password",a)})}});module.exports=User;var db=require("../config"),Link=require("../models/link"),Links=new db.Collection;Links.model=Link,module.exports=Links;var db=require("../config"),User=require("../models/user"),Users=new db.Collection;Users.model=User,module.exports=Users;